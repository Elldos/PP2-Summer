1)def GeberateDefangIP(str):
 
    defangIP = "";
     
    for c in str:
        if(c == '.'):
            defangIP += "[.]"
        else:
             defangIP += c;
    return defangIP;
 
str = "255.100.50.0";
print(GeberateDefangIP(str));


2)class Solution:
    def interpret(self, command: str) -> str:
        ret = ""
        i = 0
        while i < len(command):
            if command[i] == "G":
                ret += "G"
                i += 1
            elif command[i] == "(":
                if command[i + 1] == ')':
                    ret += "o"
                    i += 2
                else:
                    ret += "al"
                    i += 4
        return ret
        
        3)class Solution {
    public int numIdenticalPairs(int[] nums) {
        
        int count = 0; 
        for(int i = 0; i < nums.length; i++) {
            for(int j = i+1; j < nums.length; j++) {
                if(nums[i] == nums[j]) {
                    count++;
                }
            }
        }
        return count;
    }
}




4)class Solution: {
    def largestAltitude(self, gain: List[int]) -> int:
        highest = 0
        current_altitude = 0
        for i in gain:
            current_altitude+=i
            highest = max(highest,current_altitude)
        return highest
        }
        
        
        
        5)class Solution: {
    def subtractProductAndSum(self, n: int) -> int:
        product = 1
        sum_total = 0
        for i in str(n):
            product*=int(i)
            sum_total+=int(i)
        return product - sum_total
        }
        
        
        
        
        



